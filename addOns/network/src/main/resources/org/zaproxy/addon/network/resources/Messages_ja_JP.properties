network.api.action.addAlias = ローカルサーバー/プロキシのエイリアスを追加します。
network.api.action.addAlias.param.enabled = 有効状態、true または false
network.api.action.addAlias.param.name = エイリアスの名前
network.api.action.addHttpProxyExclusion = HTTPプロキシから除外するホストを追加します。
network.api.action.addHttpProxyExclusion.param.enabled = 有効状態、true または false
network.api.action.addHttpProxyExclusion.param.host = ホストの値、正規表現
network.api.action.addLocalServer = ローカルサーバー/プロキシを追加します。
network.api.action.addLocalServer.param.address = ローカルサーバー/プロキシのアドレス
network.api.action.addLocalServer.param.api = ZAP APIが利用可能かどうか、true または false
network.api.action.addLocalServer.param.behindNat = ローカルサーバーがNAT配下にあるかどうか、true または false
network.api.action.addLocalServer.param.decodeResponse = レスポンスをデコードするかどうか、true または false
network.api.action.addLocalServer.param.port = ローカルサーバー/プロキシのポート
network.api.action.addLocalServer.param.proxy = ローカルサーバーがプロキシとして動作するかどうか、true または false
network.api.action.addLocalServer.param.removeAcceptEncoding = リクエストヘッダー Accept-Encoding を削除するかどうか、true または false
network.api.action.addPassThrough = ローカルプロキシをパススルーする認証局を追加します。
network.api.action.addPassThrough.param.authority = 認証局の値、正規表現を使用できます。
network.api.action.addPassThrough.param.enabled = 有効状態、true または false
network.api.action.addPkcs12ClientCertificate = PKCS\#12ファイルに含まれるクライアント証明書を追加します。証明書は自動的にアクティブに設定され、使用されます。
network.api.action.addPkcs12ClientCertificate.param.filePath = ファイルパス
network.api.action.addPkcs12ClientCertificate.param.index = ファイル内の証明書のインデックス。デフォルトは 0
network.api.action.addPkcs12ClientCertificate.param.password = ファイルのパスワード
network.api.action.addRateLimitRule = レート制限ルールを追加します。
network.api.action.addRateLimitRule.param.description = ルールを識別するための説明。各ルールには固有の説明が必要です。
network.api.action.addRateLimitRule.param.enabled = 有効状態、true または false
network.api.action.addRateLimitRule.param.groupBy = レート制限を適用する際のホストのグループ化方法\: rule または host
network.api.action.addRateLimitRule.param.matchRegex = ホストに一致する正規表現
network.api.action.addRateLimitRule.param.matchString = プレーンテキストマッチはDNS規則に基づいて処理されます。文字列が1つまたは2つのコンポーネントを持つ場合。
network.api.action.addRateLimitRule.param.requestsPerSecond = 1秒あたりの最大リクエスト数
network.api.action.generateRootCaCert = サーバー証明書を発行するために使用する新しいルートCA証明書を生成します。
network.api.action.importRootCaCert = サーバー証明書を発行するために使用するルートCA証明書をインポートします。
network.api.action.importRootCaCert.param.filePath = 証明書と秘密鍵を含むPEMファイルのファイルシステムパス。
network.api.action.removeAlias = エイリアスを削除します。
network.api.action.removeAlias.param.name = エイリアスの名前
network.api.action.removeHttpProxyExclusion = HTTPプロキシ除外を削除します。
network.api.action.removeHttpProxyExclusion.param.host = ホストの値
network.api.action.removeLocalServer = ローカルサーバー/プロキシを削除します。
network.api.action.removeLocalServer.param.address = ローカルサーバー/プロキシのアドレス
network.api.action.removeLocalServer.param.port = ローカルサーバー/プロキシのポート
network.api.action.removePassThrough = パススルーを削除します。
network.api.action.removePassThrough.param.authority = 認証局の値
network.api.action.removeRateLimitRule = レート制限ルールを削除します。
network.api.action.removeRateLimitRule.param.description = 削除するルールの説明。
network.api.action.setAliasEnabled = エイリアスの有効/無効を設定します。
network.api.action.setAliasEnabled.param.enabled = 有効状態、true または false
network.api.action.setAliasEnabled.param.name = エイリアスの名前
network.api.action.setConnectionTimeout = 読み取りおよび接続のタイムアウトを設定します。
network.api.action.setConnectionTimeout.param.timeout = タイムアウト (秒)
network.api.action.setDefaultUserAgent = デフォルトのユーザーエージェントを設定します。
network.api.action.setDefaultUserAgent.param.userAgent = デフォルトのユーザーエージェント
network.api.action.setDnsTtlSuccessfulQueries = 成功したDNSクエリのTTLを設定します。
network.api.action.setDnsTtlSuccessfulQueries.param.ttl = TTL (秒)。負の値は無期限キャッシュ、0はキャッシュ無効、正の値は成功したDNSクエリをキャッシュする秒数。
network.api.action.setHttpProxy = HTTPプロキシ設定を行います。
network.api.action.setHttpProxy.param.host = ホスト名またはアドレス
network.api.action.setHttpProxy.param.password = パスワード
network.api.action.setHttpProxy.param.port = ポート
network.api.action.setHttpProxy.param.realm = 認証レルム
network.api.action.setHttpProxy.param.username = ユーザー名
network.api.action.setHttpProxyAuthEnabled = HTTPプロキシ認証の有効/無効を設定します。
network.api.action.setHttpProxyAuthEnabled.param.enabled = 有効状態、true または false
network.api.action.setHttpProxyEnabled = HTTPプロキシの有効/無効を設定します。
network.api.action.setHttpProxyEnabled.param.enabled = 有効状態、true または false
network.api.action.setHttpProxyExclusionEnabled = HTTPプロキシ除外の有効/無効を設定します。
network.api.action.setHttpProxyExclusionEnabled.param.enabled = 有効状態、true または false
network.api.action.setHttpProxyExclusionEnabled.param.host = ホストの値
network.api.action.setPassThroughEnabled = パススルーの有効/無効を設定します。
network.api.action.setPassThroughEnabled.param.authority = 認証局の値
network.api.action.setPassThroughEnabled.param.enabled = 有効状態、true または false
network.api.action.setRateLimitRuleEnabled = レート制限ルールの有効状態を設定します。
network.api.action.setRateLimitRuleEnabled.param.description = 変更するルールの説明
network.api.action.setRateLimitRuleEnabled.param.enabled = 有効状態、true または false
network.api.action.setRootCaCertValidity = ルートCA証明書の有効期間を設定します。新しいルートCA証明書の生成時に使用されます。
network.api.action.setRootCaCertValidity.param.validity = 生成されるルートCA証明書が有効な日数
network.api.action.setServerCertValidity = サーバー証明書の有効期間を設定します。サーバー証明書の生成時に使用されます。
network.api.action.setServerCertValidity.param.validity = 生成されるサーバー証明書が有効な日数
network.api.action.setSocksProxy = SOCKSプロキシ設定を行います。
network.api.action.setSocksProxy.param.host = ホスト名またはアドレス
network.api.action.setSocksProxy.param.password = パスワード
network.api.action.setSocksProxy.param.port = ポート
network.api.action.setSocksProxy.param.useDns = SOCKSプロキシで名前解決を行うかどうか。true または false。
network.api.action.setSocksProxy.param.username = ユーザー名
network.api.action.setSocksProxy.param.version = SOCKSバージョン
network.api.action.setSocksProxyEnabled = SOCKSプロキシの有効/無効を設定します。
network.api.action.setSocksProxyEnabled.param.enabled = 有効状態、true または false
network.api.action.setUseClientCertificate = アクティブなクライアント証明書を使用するかどうかを設定します。
network.api.action.setUseClientCertificate.param.use = 使用状態、true または false
network.api.action.setUseGlobalHttpState = グローバルHTTP状態を使用するかどうかを設定します。
network.api.action.setUseGlobalHttpState.param.use = 使用状態、true または false
network.api.desc = コアネットワーク機能へのアクセスと設定を許可します。

network.api.legacy.api.action.addAdditionalProxy = 提供された詳細を使用して新しいプロキシを追加します。
network.api.legacy.api.action.removeAdditionalProxy = 指定したアドレスとポートの追加プロキシを削除
network.api.legacy.api.view.additionalProxies = 設定されている追加プロキシの一覧を取得します。
network.api.legacy.deprecated.network = 代わりに「network」コンポーネントのAPIエンドポイントを使用してください。

network.api.other.proxy.pac = メインプロキシ経由でプロキシするPACファイルを提供します。
network.api.other.rootCaCert = サーバー証明書の発行に使用するルートCA証明書を取得します。クライアントアプリケーション (ブラウザなど) へのインポートに適しています。
network.api.other.setProxy = HTTPプロキシ設定を行います。
network.api.other.setProxy.param.proxy = HTTPプロキシ設定を含むJSONオブジェクト
network.api.view.getAliases = ローカルサーバー/プロキシの識別に使用するエイリアスを取得します。
network.api.view.getConnectionTimeout = 接続タイムアウト (秒) を取得します。
network.api.view.getDefaultUserAgent = デフォルトのユーザーエージェントを取得します。
network.api.view.getDnsTtlSuccessfulQueries = 成功したDNSクエリのTTLを取得 (秒)
network.api.view.getHttpProxy = HTTPプロキシを取得します。
network.api.view.getHttpProxyExclusions = HTTPプロキシ除外を取得します。
network.api.view.getLocalServers = ローカルサーバー/プロキシを取得します。
network.api.view.getPassThroughs = ローカルプロキシをパススルーする認証局を取得します。
network.api.view.getRateLimitRules = レート制限ルールの一覧を取得します。
network.api.view.getRootCaCertValidity = ルートCA証明書の有効期間 (日数) を取得します。新しいルートCA証明書の生成時に使用されます。
network.api.view.getServerCertValidity = サーバー証明書の有効期間 (日数) を取得します。サーバー証明書の生成時に使用されます。
network.api.view.getSocksProxy = SOCKSプロキシを取得します。
network.api.view.isHttpProxyAuthEnabled = HTTPプロキシ認証が有効かどうかを示します。
network.api.view.isHttpProxyEnabled = HTTPプロキシが有効かどうかを示します。
network.api.view.isSocksProxyEnabled = SOCKSプロキシが有効かどうかを示します。
network.api.view.isUseGlobalHttpState = グローバルHTTP状態を使用するかどうかを示します。

network.cmdline.certdump.done = ルートCA証明書が {0} に書き込まれました
network.cmdline.certfulldump = ルートCA証明書の完全版 (秘密鍵を含む) を指定されたファイル名にダンプします。ZAPへのインポートに適しています
network.cmdline.certload = 指定されたファイル名からルートCA証明書を読み込みます
network.cmdline.certload.done = ルートCA証明書が {0} から読み込まれました
network.cmdline.certpubdump = ルートCA公開証明書を指定されたファイル名にダンプします。ブラウザへのインポートに適しています
network.cmdline.error.noread = ファイル {0} を読み取れません
network.cmdline.error.nowrite = ファイル {0} に書き込めません
network.cmdline.error.write = ルートCA証明書の {0} への書き込みエラー
network.cmdline.proxy.error.generic = 原因\: {0}
network.cmdline.proxy.error.host.assign = アドレス {0} でリッスンできません
network.cmdline.proxy.error.host.unknown = 不明なホスト\: {0}
network.cmdline.proxy.error.message = メインプロキシの開始中にエラーが発生しました。\n{0}
network.cmdline.proxy.error.port = ポート {0}\:{1} でリッスンできません - ZAPが使用する別のポートを指定してください。
network.cmdline.proxy.error.port.retry = ポート {0} を使用できません。次を試してください：
network.cmdline.proxy.error.title = メインプロキシ開始エラー
network.cmdline.proxy.host = 設定ファイルで指定されたメインプロキシのホストを上書きします
network.cmdline.proxy.port = 設定ファイルで指定されたメインプロキシのポートを上書きします
network.cmdline.proxy.port.invalid.message = メインプロキシを開始できません。-port の値が有効なポート番号ではありません：\n{0}
network.cmdline.proxy.port.invalid.title = 無効なポート番号

network.ext.desc = コアネットワーク機能を提供します。
network.ext.name = Network 拡張機能

network.httpsender.error.badhost.connect = 接続試行中に例外が発生しました\:
network.httpsender.error.badhost.exception = 例外は次のとおりです\: \n
network.httpsender.error.badhost.help = この問題の解決には、以下のドキュメントが役立つ可能性があります：\n{0} 
network.httpsender.error.badhost.help.url = https\://www.zaproxy.org/faq/why-cant-zap-connect-to-my-website/

network.httpsender.error.proxy = \n\n「オプション」→「ネットワーク」→「接続」のプロキシ設定が正しくない可能性があります。
network.httpsender.error.readtimeout = {0} への接続が {1}秒でタイムアウトしました。\nサイトが利用可能か確認するか、ZAPの接続オプションでタイムアウト値を調整してください。
network.httpsender.ssl.error.connect = 接続試行中に例外が発生しました\:
network.httpsender.ssl.error.exception = 例外は次のとおりです\: \n
network.httpsender.ssl.error.exception.rootcause = 根本原因\: \n
network.httpsender.ssl.error.help = この問題の解決には、以下のドキュメントが役立つ可能性があります：\n{0} 
network.httpsender.ssl.error.help.url = https\://www.zaproxy.org/faq/how-to-connect-to-an-https-site-that-reports-a-handshake-failure/

network.importpem.certnobase64 = 証明書が適切にBase64エンコードされていません。
network.importpem.failed.title = ルートCA証明書 .pemファイルインポートエラー
network.importpem.failedkeystore = .pemファイルからのキーストア作成に失敗しました：\n{0}
network.importpem.failedreadfile = 選択された .pemファイルの読み取りに失敗しました：\n{0}
network.importpem.nocertsection = .pemファイルに証明書セクションが見つかりません。\n次のトークンで囲まれた証明書が含まれている必要があります：\n{0}\nと：\n{1}
network.importpem.noprivkeysection = .pemファイルに秘密鍵セクションが見つかりません。\n次のトークンで囲まれた秘密鍵が含まれている必要があります：\n{0}\nと：\n{1}
network.importpem.privkeynobase64 = 秘密鍵が適切にBase64エンコードされていません。

network.ui.footer.proxies.main = メインプロキシ\: {0}
network.ui.footer.proxies.representation = {0}\:{1}
network.ui.footer.proxies.tooltip.additional.disabled = 追加プロキシ (無効)\:
network.ui.footer.proxies.tooltip.additional.enabled = 追加プロキシ (有効)\:
network.ui.footer.proxies.tooltip.main = メインプロキシ\:

network.ui.options.alias.add.button = 追加
network.ui.options.alias.add.field.enabled = 有効\:
network.ui.options.alias.add.field.name = 名前\:
network.ui.options.alias.add.title = エイリアスの追加
network.ui.options.alias.modify.button = 変更
network.ui.options.alias.modify.title = エイリアスの変更
network.ui.options.alias.remove.button.cancel = キャンセル
network.ui.options.alias.remove.button.confirm = 削除
network.ui.options.alias.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.alias.remove.text = 選択した別名を削除してもよろしいですか?
network.ui.options.alias.remove.title = エイリアスの削除
network.ui.options.alias.tab = エイリアス
network.ui.options.alias.table.header.enabled = 有効
network.ui.options.alias.table.header.name = 名前

network.ui.options.alpn.enable.label = TLS ALPN拡張を有効にする
network.ui.options.alpn.protocols.error.noprotocolsselected = 少なくとも1つのアプリケーションプロトコルを選択する必要があります。
network.ui.options.alpn.protocols.error.title = アプリケーションプロトコル設定エラー
network.ui.options.alpn.protocols.http1.1.label = HTTP/1.1
network.ui.options.alpn.protocols.http2.label = HTTP/2
network.ui.options.alpn.protocols.label = プロトコル\:
network.ui.options.alpn.title = ALPN

network.ui.options.clientcertificates.addkeystore = キーストアに追加
network.ui.options.clientcertificates.certificate.title = 証明書
network.ui.options.clientcertificates.description = キーストアを追加して、希望する証明書を有効化してください。
network.ui.options.clientcertificates.error = エラー
network.ui.options.clientcertificates.error.accesskeystore = キーストアへのアクセスエラー\:
network.ui.options.clientcertificates.error.cert.title = クライアント証明書
network.ui.options.clientcertificates.error.pkcs11.lib = PKCS\#11ライブラリを再度指定してください…
network.ui.options.clientcertificates.error.pkcs11.notavailable = 必要な Sun/IBM PKCS\#11 プロバイダーが利用できません。\n詳細については次のページを参照してください：
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink = http\://pic.dhe.ibm.com/infocenter/java7sdk/v7r0/topic/com.ibm.java.security.component.71.doc/security-component/pkcs11implDocs/ibmpkcs11.html
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink.text = IBMPKCS11Impl プロバイダー
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink = http\://docs.oracle.com/javase/7/docs/technotes/guides/security/p11guide.html\#Requirements
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink.text = Sun PKCS\#11 プロバイダー
network.ui.options.clientcertificates.error.pkcs11.pinempty = PINが提供されませんでした。
network.ui.options.clientcertificates.error.pkcs11.wrongdata = PINまたはライブラリが正しくない可能性があります。
network.ui.options.clientcertificates.error.pkcs11.wrongpassword = PKCS\#11 PINが正しくありません。
network.ui.options.clientcertificates.error.pkcs11.wrongpasswordlast = (スマートカードがロックされる前の最後の試行)
network.ui.options.clientcertificates.error.pkcs12.wrongdata = ファイルまたはパスワードが正しくない可能性があります。
network.ui.options.clientcertificates.keystore.activate = 有効化
network.ui.options.clientcertificates.keystore.activecertificate = 有効な証明書
network.ui.options.clientcertificates.keystore.certs.table.header = 証明書
network.ui.options.clientcertificates.keystore.enterpassword = パスワードを入力
network.ui.options.clientcertificates.keystore.keystores.table.header = キー･ストア
network.ui.options.clientcertificates.keystore.remove = 削除
network.ui.options.clientcertificates.keystore.tab = キー･ストア
network.ui.options.clientcertificates.keystore.view = ビュー
network.ui.options.clientcertificates.name = クライアント証明書
network.ui.options.clientcertificates.pkcs11.driver = ドライバー\:
network.ui.options.clientcertificates.pkcs11.driver.manage = 管理…
network.ui.options.clientcertificates.pkcs11.pin = PIN\:
network.ui.options.clientcertificates.pkcs11.tab = PKCS\#11
network.ui.options.clientcertificates.pkcs11.usesli = スロットリストインデックスを使用する
network.ui.options.clientcertificates.pkcs11drivers.title = PKCS\#11ドライバー
network.ui.options.clientcertificates.pkcs12.file = ファイル\:
network.ui.options.clientcertificates.pkcs12.file.select = 選択…
network.ui.options.clientcertificates.pkcs12.file.select.desc = クライアント証明書 {0}
network.ui.options.clientcertificates.pkcs12.password = パスワード\:
network.ui.options.clientcertificates.pkcs12.store = 設定を保存する
network.ui.options.clientcertificates.pkcs12.tab = PKCS\#12
network.ui.options.clientcertificates.usecertificate = 証明書を使用する

network.ui.options.connection.general.dns.title = DNS
network.ui.options.connection.general.dns.ttlsuccessful.label = 成功クエリのTTL (秒)\:
network.ui.options.connection.general.dns.ttlsuccessful.toolTip = <html>成功したDNSクエリのキャッシュ期間を設定します：<ul><li>負の値\: 永続キャッシュ</li><li>0\: キャッシュを無効化</li><li>正の値\: キャッシュ期間 (秒)</li></ul><strong>注意\:</strong> 設定変更は再起動後に反映されます。</html>
network.ui.options.connection.general.globalhttpstate = グローバルHTTP状態を使用する
network.ui.options.connection.general.tab = 全般
network.ui.options.connection.general.timeout = タイムアウト (秒)\:
network.ui.options.connection.general.unsaferenegotiation = 安全でないSSL/TLSの再ネゴシエーションを有効にする
network.ui.options.connection.general.unsaferenegotiation.tooltip = 安全でないSSL/TLS再ネゴシエーションを有効にするには、HTTPS接続を確立する前にオンにする必要があります。\n動作しない場合は、ZAPを再起動してください
network.ui.options.connection.general.useragent = デフォルトのユーザーエージェント\:

network.ui.options.connection.httpproxy.auth.enabled = 認証\:
network.ui.options.connection.httpproxy.auth.storepass = パスワードを保存する
network.ui.options.connection.httpproxy.enabled = 有効\:
network.ui.options.connection.httpproxy.exclusions = 除外\:
network.ui.options.connection.httpproxy.exclusions.add.button = 追加
network.ui.options.connection.httpproxy.exclusions.add.field.enabled = 有効\:
network.ui.options.connection.httpproxy.exclusions.add.field.host = ホスト\:
network.ui.options.connection.httpproxy.exclusions.add.title = HTTPプロキシの除外を追加
network.ui.options.connection.httpproxy.exclusions.modify.button = 変更
network.ui.options.connection.httpproxy.exclusions.modify.title = HTTPプロキシの除外を変更
network.ui.options.connection.httpproxy.exclusions.remove.button.cancel = キャンセル
network.ui.options.connection.httpproxy.exclusions.remove.button.confirm = 削除
network.ui.options.connection.httpproxy.exclusions.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.connection.httpproxy.exclusions.remove.text = 選択した除外設定を削除してもよろしいですか?
network.ui.options.connection.httpproxy.exclusions.remove.title = HTTPプロキシの除外を削除
network.ui.options.connection.httpproxy.exclusions.table.header.enabled = 有効
network.ui.options.connection.httpproxy.exclusions.table.header.host = ホスト
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.message = 入力された正規表現は無効です：\n{0}
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.title = 無効な正規表現
network.ui.options.connection.httpproxy.host = ホスト\:
network.ui.options.connection.httpproxy.host.empty = HTTPプロキシホストが空です。
network.ui.options.connection.httpproxy.password = パスワード\:
network.ui.options.connection.httpproxy.port = ポート\:
network.ui.options.connection.httpproxy.realm = 認証レルム\:
network.ui.options.connection.httpproxy.tab = HTTPプロキシ
network.ui.options.connection.httpproxy.username = ユーザ名\:
network.ui.options.connection.httpproxy.username.empty = HTTPプロキシユーザー名が空です。
network.ui.options.connection.httpproxy.zapaddress = HTTPプロキシがローカルサーバー/プロキシの1つに設定されており、意図しないリクエストループが発生します。

network.ui.options.connection.name = 接続

network.ui.options.connection.socksproxy.dns = SOCKSのDNSを使用する
network.ui.options.connection.socksproxy.dns.tooltip = バージョン5でのみサポートされています。
network.ui.options.connection.socksproxy.enabled = 有効\:
network.ui.options.connection.socksproxy.host = ホスト\:
network.ui.options.connection.socksproxy.host.empty = SOCKSホストが空です。
network.ui.options.connection.socksproxy.password = パスワード\:
network.ui.options.connection.socksproxy.port = ポート\:
network.ui.options.connection.socksproxy.tab = SOCKSプロキシ
network.ui.options.connection.socksproxy.username = ユーザ名\:
network.ui.options.connection.socksproxy.version = バージョン\:
network.ui.options.connection.socksproxy.zapaddress = SOCKSプロキシがローカルサーバー/プロキシの1つに設定されており、意図しないリクエストループが発生します。

network.ui.options.globalexclusions.add.button = 追加
network.ui.options.globalexclusions.add.title = グローバル除外の追加
network.ui.options.globalexclusions.field.enabled = 有効\:
network.ui.options.globalexclusions.field.name = 名前\:
network.ui.options.globalexclusions.field.value = 値\:
network.ui.options.globalexclusions.modify.button = 変更
network.ui.options.globalexclusions.modify.title = グローバル除外の変更
network.ui.options.globalexclusions.name = グローバル除外
network.ui.options.globalexclusions.remove.button.cancel = キャンセル
network.ui.options.globalexclusions.remove.button.confirm = 削除
network.ui.options.globalexclusions.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.globalexclusions.remove.text = 選択したグローバル除外設定を削除してもよろしいですか?
network.ui.options.globalexclusions.remove.title = グローバル除外の削除
network.ui.options.globalexclusions.table.header.enabled = 有効
network.ui.options.globalexclusions.table.header.name = 名前
network.ui.options.globalexclusions.warn.invalidregex.message = 入力された正規表現は無効です：\n{0}
network.ui.options.globalexclusions.warn.invalidregex.title = 無効な正規表現

network.ui.options.legacy.globalexcludeurl = グローバル除外URL
network.ui.options.legacy.globalexcludeurl.moved = これらのオプションは「ネットワーク」>「グローバル除外」に移動しました。
network.ui.options.legacy.opennew = 新しい画面へ移動
network.ui.options.legacy.ratelimit = レート制限

network.ui.options.localservers.add.button = 追加
network.ui.options.localservers.add.field.address = アドレス\:
network.ui.options.localservers.add.field.port = ポート\:
network.ui.options.localservers.add.title = ローカルサーバー/プロキシの追加
network.ui.options.localservers.desc = 次のプロキシのいずれかを使用してブラウザのプロキシ設定を行ってください。\nHTTPポートとHTTPSポートは同じポートでなければなりません。
network.ui.options.localservers.field.behindnat = NATの背後
network.ui.options.localservers.field.behindnat.tooltip = <html>ZAPがNAT環境下にあることを示します。<br>有効にすると、ZAPはパブリックIPアドレスを特定し、<br>パブリックIPアドレス宛てのリクエストを適切に処理します。<br>詳細については、ヘルプページを参照してください。</html>
network.ui.options.localservers.field.decoderesponse = レスポンスのデコード
network.ui.options.localservers.field.decoderesponse.tooltip = <html>レスポンスを常に自動デコードします (gzip、deflate等)。<br>Accept-Encodingヘッダーを無視するアプリケーションに必要です。<br>デコード処理がアプリケーションに問題を起こす場合を除き、常に有効にしてください。</html>
network.ui.options.localservers.field.mode = モード\:
network.ui.options.localservers.field.mode.api = API
network.ui.options.localservers.field.mode.apiproxy = APIとプロキシ
network.ui.options.localservers.field.mode.proxy = プロキシ
network.ui.options.localservers.field.removeacceptencoding = Accept-Encoding リクエストヘッダーを削除する
network.ui.options.localservers.field.removeacceptencoding.tooltip = <html>Accept-Encodingリクエストヘッダーを削除し、<br>未サポートのエンコード変換を防止します。<br>エンコード変換テスト時以外は常に有効にしてください。<br>未サポートエンコードのHTTPレスポンスはスキャナーで正しくスキャンされません。</html>
network.ui.options.localservers.mainproxy.title = メインプロキシ
network.ui.options.localservers.modify.button = 変更
network.ui.options.localservers.modify.main.button = プロキシプロパティ…
network.ui.options.localservers.modify.main.title = メインプロキシの変更
network.ui.options.localservers.modify.title = ローカルサーバー/プロキシの変更
network.ui.options.localservers.name = ローカルサーバー/プロキシ
network.ui.options.localservers.remove.button.cancel = キャンセル
network.ui.options.localservers.remove.button.confirm = 削除
network.ui.options.localservers.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.localservers.remove.text = 選択したサーバーを削除してもよろしいですか?
network.ui.options.localservers.remove.title = ローカルサーバー/プロキシの削除
network.ui.options.localservers.servers.binderror = このアドレスとポートでリッスンできません：\n{0}
network.ui.options.localservers.servers.duplicated = このアドレスとポートのローカルサーバー/プロキシは既に定義されています：\n{0}
network.ui.options.localservers.servers.duplicated.title = 重複するローカルサーバー/プロキシ
network.ui.options.localservers.servers.title = 追加サーバー/プロキシ
network.ui.options.localservers.table.header.address = アドレス
network.ui.options.localservers.table.header.enabled = 有効
network.ui.options.localservers.table.header.port = ポート

network.ui.options.name = ネットワーク

network.ui.options.passthrough.add.button = 追加
network.ui.options.passthrough.add.field.authority = 認証局\:
network.ui.options.passthrough.add.field.enabled = 有効\:
network.ui.options.passthrough.add.title = パススルー条件の追加
network.ui.options.passthrough.modify.button = 変更
network.ui.options.passthrough.modify.title = パススルー条件の変更
network.ui.options.passthrough.remove.button.cancel = キャンセル
network.ui.options.passthrough.remove.button.confirm = 削除
network.ui.options.passthrough.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.passthrough.remove.text = 選択したパススルー条件を削除してもよろしいですか?
network.ui.options.passthrough.remove.title = パススルー条件の削除
network.ui.options.passthrough.tab = パススルー
network.ui.options.passthrough.table.header.authority = 認証局
network.ui.options.passthrough.table.header.enabled = 有効
network.ui.options.passthrough.warn.invalidregex.message = 入力された正規表現は無効です：\n{0}
network.ui.options.passthrough.warn.invalidregex.title = 無効な正規表現

network.ui.options.pkcs11driver.add.button = 追加
network.ui.options.pkcs11driver.add.field.library = ライブラリ\:
network.ui.options.pkcs11driver.add.field.library.select = 選択…
network.ui.options.pkcs11driver.add.field.name = 名前\:
network.ui.options.pkcs11driver.add.field.slot = スロット\:
network.ui.options.pkcs11driver.add.field.slotlistindex = スロットリストインデックス\:
network.ui.options.pkcs11driver.add.title = PKCS\#11ドライバーの追加
network.ui.options.pkcs11driver.modify.button = 変更
network.ui.options.pkcs11driver.modify.title = PKCS\#11の変更
network.ui.options.pkcs11driver.remove.button.cancel = キャンセル
network.ui.options.pkcs11driver.remove.button.confirm = 削除
network.ui.options.pkcs11driver.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.options.pkcs11driver.remove.text = 選択したドライバーを削除してもよろしいですか?
network.ui.options.pkcs11driver.remove.title = PKCS\#11の削除
network.ui.options.pkcs11driver.table.header.name = 名前
network.ui.options.pkcs11driver.table.header.slot = スロット
network.ui.options.pkcs11driver.table.header.slotlistindex = スロットリストインデックス

network.ui.options.securityprotocols.error.justsslv2helloselected = SSLv2Helloは他のセキュリティプロトコルと組み合わせて選択する必要があります。
network.ui.options.securityprotocols.error.noprotocolsselected = セキュリティプロトコルを少なくとも1つ選択する必要があります
network.ui.options.securityprotocols.error.title = セキュリティプロトコル設定エラー
network.ui.options.securityprotocols.protocolnotsupportedtooltip = プロトコルが有効でないか、JREでサポートされていません。
network.ui.options.securityprotocols.ssl2hello.label = SSLv2Hello
network.ui.options.securityprotocols.ssl3.label = SSL 3
network.ui.options.securityprotocols.title = セキュリティプロトコル
network.ui.options.securityprotocols.tlsv1.1.label = TLS 1.1
network.ui.options.securityprotocols.tlsv1.2.label = TLS 1.2
network.ui.options.securityprotocols.tlsv1.3.label = TLS 1.3
network.ui.options.securityprotocols.tlsv1.label = TLS 1

network.ui.options.servercertificates.button.generate = 生成
network.ui.options.servercertificates.button.import = インポート
network.ui.options.servercertificates.button.save = 保存
network.ui.options.servercertificates.button.view = ビュー
network.ui.options.servercertificates.field.certvalidity = 有効日数\:
network.ui.options.servercertificates.field.crldistpoint = CRL配布ポイント\:
network.ui.options.servercertificates.field.pem = PEM\:
network.ui.options.servercertificates.import.config.error = 設定ファイルからのルートCA証明書のインポートに失敗しました。\n詳細についてはログファイルを参照してください。
network.ui.options.servercertificates.import.config.error.title = インポートエラー 
network.ui.options.servercertificates.import.config.nocert = 選択した設定ファイルに証明書がありません。
network.ui.options.servercertificates.import.config.nocert.title = ルートCA証明書なし
network.ui.options.servercertificates.import.pem.certnobase64 = 証明書が適切にBase64エンコードされていません。
network.ui.options.servercertificates.import.pem.failed.title = ルートCA証明書 .pemファイルインポートエラー
network.ui.options.servercertificates.import.pem.failedkeystore = .pemファイルからのキーストア作成に失敗しました：\n{0}
network.ui.options.servercertificates.import.pem.failedreadfile = 選択された .pemファイルの読み取りに失敗しました：\n{0}
network.ui.options.servercertificates.import.pem.nocertsection = .pemファイルに証明書セクションが見つかりません。\n次のトークンで囲まれた証明書が含まれている必要があります：\n{0}\nと：\n{1}
network.ui.options.servercertificates.import.pem.noprivkeysection = .pemファイルに秘密鍵セクションが見つかりません。\n次のトークンで囲まれた秘密鍵が含まれている必要があります：\n{0}\nと：\n{1}
network.ui.options.servercertificates.import.pem.privkeynobase64 = 秘密鍵が適切にBase64エンコードされていません。
network.ui.options.servercertificates.name = サーバー証明書
network.ui.options.servercertificates.overwrite.message = ルートCA証明書が既に存在します。\n新しい証明書を作成すると、既存の証明書が置き換えられます。\n\n現在の証明書を上書きしますか?
network.ui.options.servercertificates.overwrite.title = 既存の証明書を上書きしてもよろしいですか?
network.ui.options.servercertificates.tab.issuedcerts = 発行済み証明書
network.ui.options.servercertificates.tab.rootcacert = ルートCA証明書

network.ui.prompt.httpproxy.password.button = OK
network.ui.prompt.httpproxy.password.label = HTTPプロキシパスワード\:
network.ui.prompt.httpproxy.password.title = HTTPプロキシパスワードが必要

network.ui.ratelimit.add.title = レート制限ルールの追加
network.ui.ratelimit.add.warning.badregex = マッチ文字列が有効な正規表現パターンではありません。
network.ui.ratelimit.add.warning.existdesc = この説明のルールは既に存在します。
network.ui.ratelimit.add.warning.nodesc = 説明を入力する必要があります。
network.ui.ratelimit.add.warning.nomatch = マッチ文字列を入力する必要があります。
network.ui.ratelimit.context.limitdomain.title = ドメイン
network.ui.ratelimit.context.limithost.title = ホスト
network.ui.ratelimit.context.title = リクエストレート制限
network.ui.ratelimit.desc = 過負荷防止やブロック防止のためリクエストレートを制限します。
network.ui.ratelimit.groupby.host = ホスト
network.ui.ratelimit.groupby.rule = ルール
network.ui.ratelimit.label.desc = 説明\:
network.ui.ratelimit.label.enable = 有効\:
network.ui.ratelimit.label.groupby = グループ化\:
network.ui.ratelimit.label.matchstr = マッチ文字列\:
network.ui.ratelimit.label.regex = マッチ正規表現\:
network.ui.ratelimit.label.requestspersecond = 1秒あたりのリクエスト数\:
network.ui.ratelimit.modify.title = レート制限ルールの変更
network.ui.ratelimit.name = リクエストレート制限
network.ui.ratelimit.options.dialog.remove.button.cancel = キャンセル
network.ui.ratelimit.options.dialog.remove.button.confirm = 削除
network.ui.ratelimit.options.dialog.remove.checkbox.label = 今後このメッセージを表示しない
network.ui.ratelimit.options.dialog.remove.text = このルールを削除してもよろしいですか?
network.ui.ratelimit.options.dialog.remove.title = レート制限ルールの削除
network.ui.ratelimit.options.label.rules = ルール\:
network.ui.ratelimit.options.table.header.description = 説明
network.ui.ratelimit.options.table.header.enabled = 有効
network.ui.ratelimit.options.table.header.groupby = グループ化
network.ui.ratelimit.options.table.header.match = マッチ文字列
network.ui.ratelimit.options.table.header.requestspersecond = リクエスト数/秒
network.ui.ratelimit.options.title = レート制限
network.ui.ratelimit.panel.title = レート制限オプション
network.ui.ratelimit.status.header.description = ルール
network.ui.ratelimit.status.header.effectiverate = 実効レート
network.ui.ratelimit.status.header.group = グループ
network.ui.ratelimit.status.header.lastrequest = 最終処理時刻
network.ui.ratelimit.status.header.requestcount = リクエスト数
network.ui.ratelimit.status.title = レート制限
network.ui.ratelimit.tab.rule = ルール

network.warn.cert.expired = ZAPのルートCA証明書は {0} で期限が切れています (現在\: {1})。\n証明書を再生成してブラウザに再インストールしてください。\n証明書を再生成して、関連するオプション画面に移動しますか?
network.warn.cert.failed = ルートCA証明書の作成に失敗しました。\n詳細についてはログを参照してください。
